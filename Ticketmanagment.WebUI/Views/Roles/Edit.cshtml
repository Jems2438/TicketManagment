

@using Kendo.Mvc.UI


@(Html.Kendo()
    .Name("Popup")
    
    .Columns(columns =>
    {
    
        columns.Bound(c => c.Name).Width(120);
        columns.Bound(c => c.Code).Width(100);

    })
    .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(20)

        .Model(model =>
        {
            model.Id(p => p.Id);
            model.Field(p => p.Id).Editable(false);

            model.Field(p => p.Name).Editable(true);
            model.Field(p => p.Code).Editable(true);
            // Other fields...
        })

        .Read(read => read.Action("GetListOfRole", "Roles"))
        .Create(update =>
        {
            update.Action("CreateRole", "Roles");
        })
                    .Update(update => update.Action("Edit", "Roles"))
                    .Destroy(update => update.Action("ConfirmDelete", "Roles"))
    )
)
@*@model TicketManagment.Core.Models.Roles

    @{
        ViewBag.Title = "Edit";
    }

    <h2>Edit</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Roles</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)




            <div class="form-group">
                @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.IsActive)
                        @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@
