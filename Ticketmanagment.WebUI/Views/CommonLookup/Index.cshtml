@model IEnumerable<TicketManagment.Core.Models.CommonLookup>

@{
    ViewBag.Title = "Index";
}
<script src="~/Scripts/site.js"></script>
<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script src="~/Scripts/bootstrap.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create", "CommonLookup")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.CreatedAt)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CreatedBy)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.UpdatedAt)
        </th>
        <th>
            UpdatedBy
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LookupName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LookupKey)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LookupValue)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.OrderNumber)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Description)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedAt)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedBy)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UpdatedAt)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UpdatedId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LookupName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LookupKey)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LookupValue)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.OrderNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>

                <button type="button" id="item.Id" class="btn btn-primary btn-lg" data-toggle="modal" data-target="#myModal">
                    Edit 
                </button>

                @*@Html.ActionLink("Edit", "Edit",  new { id =item.Id ,@data_toggle = "modal", @data_target = "#myModal" }) |*@
                @Html.ActionLink("Delete", "Delete", new { id = item.Id })

            </td>
        </tr>
    }

</table>

@using (Ajax.BeginForm("Edit", "CommonLookup", FormMethod.Get,
                    new AjaxOptions
                    {
                        InsertionMode = InsertionMode.Replace,
                        HttpMethod = "Get",
                        
                    }))
{
    @Html.ValidationSummary()
    @Html.AntiForgeryToken()
    <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">

                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                    <h4 class="modal-title" id="myModalLabel">Edit CommonLookup</h4>
                </div>
                <div class="modal-body" id="frmEmp">
          
                </div>
                <div class="modal-footer">
                    <input type="submit" class="btn btn-primary" value="Submit" />
                </div>
            </div>
        </div>
    </div>

}

@*<script>
    $(document).ready(function {
        $.ajax({
            url: <%: Url.Action("Edit", "CommonLookup" %>,
                success: function (data) {
                    $('#frmEmp').html(data);
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    jAlert('Some error message', 'Error');
                }
    });
    });
</script>*@


